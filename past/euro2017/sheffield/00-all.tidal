bpm 140

flood "kindohm "

-- intro
d3 $ sometimes (jux (iter 8)) $ shift $ sometimes (|=| speed (slow 0.4 $ choose [0.5, 0.25, 0.75])) $ 
    shift $
    (|=| cutoff (slow 44 $ scale 50 3000 $ rand)) $ slow 16 $ 
        striate 128 $ sound (samples "dr:0" "[0 1]/8")
        # hpf 100
        # resonance "0.1" # gain "1.1"
        # orbit "1"
        # delaytime "0.3333" # delayfeedback "0.5" # delay "0.5"

d1 $ sound "legends:1*16" # cut "3" # gain "0.9"

d3 silence

hush

-- bluejay
bps (180/120)

do
    let pat = "{1 1*2 ~ ~ ~ 1 ~ 1*2 1 ~ 1 1 ~ ~ [~ 1] ~ 1 [~ 1] ~ 1 ~}%8"
    d1 $ 
        stack [
            gtfo $ rarely ((|=| s "cps1") . (|=| n (irand 10)) . (|=| speed (scale 0.8 1.2 $ slow 1.1 rand))) $ 
                whenmod 8 4 (|+| n "1") $ gain pat # s "kbj" # cut "2" # n "[0 4]/9",
            gain pat # sound "stab1" # cut "1" # n (irand 10) # speed "1" # shape "0" # begin "0.0001",
            gtfo $ whenmod 10 5 (0.125 <~) $ s "ss" # shape "0.2", 
            gtfo $ sometimes (stut' 1 (0.0625) (|*| gain "0.95")) $ shift $ s "spike1*8" 
                # gain (scale 0.9 1.2 $ slow 1.3 rand) # gain "0.95"
                # pan (scale 0.3 0.7 $ slow 1.4 rand) ]

-- .lean()
bps (150/120)

-- kick rep 24, synth rep 23
let progwav = (|+| up "{0 0 0 2 2}%1")
    basspat = "{leanb2 ~ ~ leanb2 ~ ~ leanb2 ~ ~ leanb2 ~ ~ leanb2 ~ ~ leanb2 ~ ~ ~}%16"
    basspat2 = "{leanb ~ ~ leanb ~ ~ leanb ~ ~ leanb ~ ~ leanb ~ ~ leanb ~ ~ ~}%16"


d1 $
stack [  
    progwav $ s basspat |=| n (shift $ irand 12) |=| gain "1",
    gtfo $ progwav $ rep' 24 $ sound "{leankit/4 ~ ~ ~ ~}%4" |=| cut "2",
    gtfo $ whenmod 7 4 (0.125 ~>) $ sound "leankit:2*4",
    gtfo $ sound "~ s" |=| gain "1.1",
    gtfo $ foldEvery [2,3] (density 2) $ sometimesBy 0.1 (# s "leankit:4") $ 
        sound "leankit:3*8" |=| gain "1" # cut "816",
    gtfo $ sound "{leankit:5/8 ~ ~ ~ ~}%4" |=| gain "1",
    gtfo $ sometimes (stut' 2 (0.125) (|*| speed "2")) $ progwav $ (0.125 ~>) $ rep' 23 $
        sound (samples "{leanm2/4 ~ ~ ~ ~}%4" (irand 25)) |=| gain "1.1" |=| cut "81"]


hush
                

-- c code
bps (140/120)


do
    let struc = "{x ~ ~ ~ ~ ~ [x] ~ ~ [~ x] ~ ~}%8"
    d1 $ whenmod 5 3 (rev) $ slow "<4 8 24 16 12>" $ 
        superimpose (0.5 <~) $ trunc 0.5 $
        striate "32 16 128 64" $ 
        rep' 3 $ struct struc $ sound "ccstab" 
            # n (slow 18 $ run 6) 
            # gain "1"
            # speed "[0.5 0.75 0.5 1 0.25]/13" 
            # shape "0.2" 
            # delaytime "0.875" # delay "0.25" # delayfeedback "0.5"
            # orbit "1"

hush

do
    let struc = "{x ~ ~ ~ ~ ~ [x] ~ ~ [~ x] ~ ~}%8"
    d1 $ 
        stack [
            gtfo $ degrade $
                gain "1*16" # sound "[cckit1 cckit2]/10" # n (irand 10) |=| cut "-1",
            gtfo $ rep' 3 $ struct struc $ sound "cck" # n (slow 18 $ run 6) |=| cut "2",
            rep' 3 $ struct struc $ sound "ccstab" # n (slow 18 $ run 6) # gain "1"
                |=| cut "1" # speed "[0.5 0.75 0.5 1]/13" # gain "1.1",
            whenmod 15 11 (gtfo) $ sound "~ cccp" # gain "1.2" # shape "0.1",
            gtfo $ struct "{~ x [~ x] [~ x/2] ~}%2" $ sound "ccs" # n "[0 1 2]/32" # speed "1.5"
                # gain "1.1"]


            
            
-- a code
bps (140/120)

do
  let pat = "{1 ~ ~ 1 ~ ~ ~ ~}%2"
  d1 $ (|+| gain "0.1") $ foldEvery [3,4] (0.25 <~) $
    stack [
      (# n "[1 0 2]/5") $ (|+| gain "[0.05 0.1 0.05]/5") $ rep' 8 $ gain pat # sound "alstab"
        # cut "1" # speed "0.25",
      gtfo $ sound "~ alcp" # gain "1",
      gtfo $ jux (iter 16) $
        sound "revkit([5 3 7]/3,8)" # cut "100" # end "1" # gain "0.7" # speed "2"
          # accelerate (choose [-1, 1])
    ]

hush
    
do
  let pat = "{1 ~ ~ 1 ~ ~ ~ ~}%2"
  d1 $ (|+| gain "0.1") $ 
    foldEvery [3,4] (0.25 <~) $
    every 6 (|=| coarse "{32 24 16 12 8 }%16") $
    stack [
      degradeBy 0.4 $
        sound "revkit*16" # n (density 2.3 $ run 7) # gain "0.8",
      (# n "[1 0 3]/5") $ (|+| gain "[0 -0.1 0]/5") $ rarely (stut' 2 (0.0625) (|*| gain "1")) $
        rep' 8 $ gain pat # sound "alk" # cut "10",
      (# n "[1 0 2]/5") $ (|+| gain "[0.05 0.15 0.05]/5") $ rep' 8 $ gain pat # sound "alstab"
        # cut "1" # speed "<1 1 1 0.5>",
      sound "~ alcp" # gain "1",
      whenmod 14 7 (degrade) $ jux (iter 16) $
        sound "als([5 3 7]/3,8)" # cut "100" # end "0.05" # gain "0.8" # speed "1"
    ]


    
-- d code
bps (180/120)

let npat = "[0 2 4 6]/16"

hush

d1 $ move $
  every 9 (rev) $
  every 5 (|=| coarse (shift' 3 $ choose [4,6..18])) $
  every 8 (|=| accelerate "0.5 -0.5") $
  whenmod 13 11 (|=| accelerate "1") $
    slow 2 $ rep' 6 $ sound "namesy" # n "[0 1]/8" # cut "23" # gain "1.1" # speed "0.5" # shape "0.4"

d1 $ 
  move $ 
  stack [
    -- break
    gtfo $ degradeBy 0.3 $ brakk "fur1*8" # gain "0.95",
    every 8 (|=| accelerate "0.5 -0.5") $
      whenmod 13 11 (|=| accelerate "1") $
      stack [
        -- vox
        whenmod 16 4 (gtfo) $
          every 3 (|*| speed (choose [0.9,0.8,0.7])) $
          rarely (stut' 1 (0.0625) (|*| gain "1")) $ sound "namevox([3 5 7]/3,16)" # cut "819" # gain "1.1",
        -- kicks
        rarely (stut' 1 (0.0625) (|*| gain "1")) $ sound "name([3 5 7]/3,16)" # n npat # gain "1",
        -- snares
        slow 2 $ (|+| n "1") $ sound "~ name [~ name] ~" # n npat # shape "0.2" # gain "1"],
    -- vaccuums
    every 8 (|=| accelerate "0.5 -0.5") $
      whenmod 13 11 (|=| accelerate "1") $
      slow 2 $ rep' 6 $ sound "namesy" # n "[0 1]/8" # cut "23" # gain "1.1" # speed "0.5" # shape "0.4"] # delaytime "0" # delayfeedback "0"


-- info
bps (170/120)

d3 $ sometimes (jux (iter 4)) $ shift $ sometimes (|=| speed "[0.5 0.25]*3") $
  (|=| cutoff (scale 100 3000 $ sine1)) $ slow 16 $ striate 128 $ sound (samples "dr:1" "[0 1]/8")
    |=| resonance "0.1" |=| gain "1"
    # orbit "1"
    # delay "0.1"
    # delayt "0.25" 
    # delayfb "0.7"


d1 $ 
stack [
  gtfo $ sound (samples "{[ch]*2 k*4? [s cp] ch*2 cp/2}%4" (run 20)),
  gtfo $ sound (samples "{~ seq2 ~}%2" (irand 20)) |=| cut "2" |=| speed "{1 -1 1}%16" # gain "0.9",
  gtfo $ sound (samples "{seq3 ~ ~ ~ ~}%2" (irand 20)) |=| cut "5",
  gtfo $ sometimes (density 2) $ shift $ rarely (|=| begin "0.5") $ shift $ sometimes (0.125 ~>) $
    sound (samples "seq1" (irand 20)) |=| cut "4"]


hush

-- mesabi
bps (240/120)

do
    let patk = "{1   ~ 1 1 ~ }%8"
    let patc = "{1/2 ~ ~ ~ ~ }%8"
    d1 $ stack [
        sometimes (# s "mestab2") $ gain patk # s "mestab2" 
            # n (discretise (1/5) $ slow 1.1 $ irand 24) # cut 1,
        sometimes (# s "meskit2") $ gain patk # s "meskit2" 
            # cut 2,
        gain patc # s "cp" # n "0" # shape "0.1"
        ] # hpf "400" # lpf "2000"

hush