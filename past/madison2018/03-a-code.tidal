-- a b code
bps (140/120)

do
  d1 silence
  d2 silence
  d3 silence

d3 silence  

-- int
do
  let pat = "{1 ~ ~ 1 ~ ~ ~ ~}%2"
  d4 $ (|*| gain 1.1) $ foldEvery [3,4,5] (0.25 <~) $
    stack [
      (# n "[1 0 2]/5") $ (|+| gain "[0.05 0.1 0.05]/5") $ rep' 8 $ gain pat # sound "alstab"
        # cut "1" # speed "0.25",
      thicken' 0.9 0.9 $ sound "~ alcp" # gain "1",
      jux (iter 16) $
        sound "revkit(<5 9 3 11 7>,16)" # n (shift' 202 $ irand 20) # gain "0.7" # speed "2"
          # accelerate (choose [-1, 1])
    ]


hush
    
d1 silence

do
  let pat = "{1 ~ ~ 1 ~ ~ ~ ~}%2"
  d1 $ (|*| gain 1.1) $ 
    degradeBy 0.9 $
    whenmod 20 17 (iter 8) $
    whenmod 10 8 (jux rev) $
    every 5 (rip 0.5 0.1) $
    every 6 (rip' 0 1 8 0.25 0.125) $
    every 7 (crushit) $
    every 8 (# coarse "{4 8 12 16 24}%11") $
    every 9 (stut' 1 (0.125*3) (|*| speed 1.5)) $
    stack [
      degradeBy 0.2 $ shift $  slowcat [ brakk "brkh1*8", brakk "brkh2*8" ],
      degradeBy 0.4 $
        sound "revkit*16" # n (density 2.3 $ run 7) # gain "0.8",
      (# n "[1 0 3]/5") $ (|+| gain "[0 -0.1 0]/5") $ rarely (stut' 2 (0.0625) (|*| gain "1")) $
        rep' 8 $ gain pat # sound "alk" # cut "10",
      (# n "[1 0 2]/5") $ (|+| gain "[0.05 0.15 0.05]/5") $ rep' 8 $ gain pat # sound "alstab"
        # cut "1" # speed "<1 1 1 0.5>",
      sound "~ alcp" # gain "1",
      whenmod 14 7 (degrade) $ jux (iter 16) $
        sound "als([5 3 7]/3,8)" # cut "100" # end "0.05" # gain "0.8" # speed "1"
    ]


    

flood "hows it going out there? "












