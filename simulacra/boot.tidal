import Sound.Tidal.Context
import Sound.Tidal.MIDI.Stream
import Sound.Tidal.MIDI.Kindohm.VolcaKeys
--import Sound.Tidal.MIDI.Kindohm.CustomParams

devs <- midiDevices
erebus <- midiStream devs "Scarlett 18i8 USB" 7 rackController
volca <- midiStream devs "Scarlett 18i8 USB" 15 rackController
erebus <- midiStream devs "Scarlett 2i4 USB MIDI 1" 7 volcaController
volca <- midiStream devs "Scarlett 2i4 USB MIDI 1" 16 volcaController


let rip a b p = within (0.25, 0.75) (slow 2 . rev . stut 8 a b) p
    rip' a b c d e p = within (a, b) (slow 2 . rev . stut c d e) p
    spike p = ((|=| delaytime (scale 0.001 0.3 $ slow 7.1 sine1)) . (|=| delayfeedback (scale 0.7 0.99 $ slow 6.71 sine1))) $ p
    spike' p = (|=| delay "0.3") $ spike $ p
    ghost'' a f p = superimpose (((a/2 + a*2) ~>) . f) $ superimpose (((a + a/2) ~>) . f) $ p
    ghost' a p = ghost'' a ((|*| gain "0.7") . (|=| end "0.2") . (|*| speed "1.25")) p
    ghost p = ghost' 0.125 p
    jit start amount p = within (start, (start + 0.5)) (trunc (amount)) p
    gtfo p = (const $ sound "~") p
    gtfo' p = (const $ midinote "~") p
    gtfom = gtfo'
    gtfo2 = gtfo'
    shift p = (1024 <~)  p
    shift' x p = (x <~) p
    move p = foldEvery [3,4] (0.25 <~) $ p
    move' p = foldEvery [2,3] (0.25 <~) $ p
    move'' p = foldEvery [3,4] (0.25 ~>) $ p
    move''' p = foldEvery [2,3] (0.25 ~>) $ p
    choose xs = (xs !!) <$> (irand $ fromIntegral $ length xs)
    one p = stut' 1 (0.125/2) (|*| gain "1") $ p
    one' p = rarely (stut' 1 (0.125/2) (|*| gain "1")) $ shift' 1024 $ p
    one'' p = sometimes (stut' 1 (0.125/2) (|*| gain "1")) $ shift' 1024 $ p
    rep n p = stut' (n-1) (0.125*3) (|*| gain "1") $ p
    rep' n p = stut' (n-1) (0.125/2*3) (|*| gain "1") $ p
    rep'' n p = stut' (n-1) (0.125/4*3) (|*| gain "1") $ p
    beginend bpat durpat = (begin bpat) # (end $ (+) <$> bpat <*> durpat)
    mpent = [0, 3, 5, 7, 10, 12]
    pent = [0, 2, 4, 7, 9, 12]
    inverse 1 = 0
    inverse 0 = 1
    inverse 11 = 0
    inverse 10 = 1
    ch = midinote "8"
    oh = midinote "9"
    bd = midinote "36"
    sd = midinote "1"
    rs = midinote "2"
    cp = midinote "3"
    bt = midinote "4"
    lt = midinote "5"
    mt = midinote "6"
    cy = midinote "10"
    cb = midinote "11"
    bpm x = bps (x/120)
    brakk samps = ((|=| unit "c") . (|=| speed "8")) $ sound (samples samps (irand 30))
    brakk4 samps = ((|=| unit "c") . (|=| speed "4")) $ sound (samples samps (irand 30))
    replicator text1 = [putStr (text1) | x <- replicate 1000 text1]
    flood text2 = sequence_(replicator text2)
    randDelay p = 
        (# delay (scale 0.7 0.99 $ shift' 1881 $ rand)) $ 
        (# delayt (shift' 1882 $ (choose [(1/4096),(1/2048)..(1/8)]))) $ 
        (# delayfb (scale 0.7 0.99 $ shift' 1883 $ rand)) $ p

import Sound.Tidal.MIDI.Context
displayOutputDevices >>= putStrLn


c1 $ sound "k*8?"

keys2 <- midiStream devs "LoopBe Internal MIDI" 2 rackController

bps (170/120)

volca $ (|+| note "-24") $ note "0*4 12*2" # dur "0.2"

erebus $ note "[0 12 5 7 24 -12]/4"


let randDelay p = 
        (# delay (scale 0.7 0.99 $ shift' 1881 $ rand)) $ 
        (# delayt (shift' 1882 $ (choose [(1/4096),(1/2048)..(1/8)]))) $ 
        (# delayfb (scale 0.7 0.99 $ shift' 1883 $ rand)) $ p

c1 $ whenmod 11 8 (iter 8) $ 
    whenmod 8 6 (jux (rev)) $
    every 7 (|=| coarse (choose [1,2..12])) $
    shift $ 
    every 8 (|=| crush (scale (-7) 7 $ shift' 383 $ rand)) $
    every 9 (|=| accelerate "{-0.5 0.5 -0.25 0.25}%7") $
    sometimesBy 0.5 (randDelay) $ shift' 3 $ every 5 (rip 0.5 0.1) $ every 6 (rip' 0 1 8 0.5 0.1) $ 
    degradeBy 0.5 $ 
    s "{peri titel doru peri s kl tite doru cp}%8" # delay "0" # delayfb "0" # delayt "0" 
    # n (slow 1.7 $ run 30)
    # cut "-1"

    hush

    erebus silence

    volca silence